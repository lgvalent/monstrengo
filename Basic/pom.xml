<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>br.com.orionsoft</groupId>
  <artifactId>monstrengo-basic</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>
  <name>Basic</name>
  
  <properties>
	  <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
  </properties>
  
  <scm>
  	<url>https://github.com/lgvalent/monstrengo/tree/master/Monstrengo</url>
  </scm>
  
  <repositories>
  	<repository>
  		<id>monstrengo</id>
		<url>https://raw.githubusercontent.com/lgvalent/monstrengo/master/Monstrengo/target/</url>
  	</repository>
  	
  	<repository>
  		<id>primefaces</id>
  		<url>https://repository.primefaces.org/</url>
  	</repository>
  </repositories>
  
  <dependencies>
    	<!-- workaround for Java 1.7: https://stackoverflow.com/questions/62006284/noclassdeffounderror-org-w3c-dom-ls-documentls-issue-occurring-only-on-deploy -->
    <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.11.0</version>
    </dependency>
  
  
    <dependency>
  		<groupId>javax.servlet</groupId>
  		<artifactId>servlet-api</artifactId>
  		<version>2.4</version>
  		<scope>test</scope>
  	</dependency>
  
  <!-- https://mvnrepository.com/artifact/org.glassfish/javax.json -->
<dependency>
    <groupId>org.glassfish</groupId>
    <artifactId>javax.json</artifactId>
    <version>1.1.4</version>
    <scope>test</scope>
</dependency>
  
  
  	<dependency>
  		<groupId>br.com.orionsoft</groupId>
  		<artifactId>monstrengo-core</artifactId>
  		<version>1.0.0</version>
  	</dependency>
	
	<dependency>
    	<groupId>javax.json</groupId>
	    <artifactId>javax.json-api</artifactId>
	    <version>1.0</version>
	</dependency>

	<dependency>
   		<groupId>javax.jws</groupId>
    	<artifactId>javax.jws-api</artifactId>
    	<version>1.1</version>
    	<scope>provided</scope>
	</dependency>	
  </dependencies>
  
  <build>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- download source code in Eclipse, best practice -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- Make this jar executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
				  <excludes>
					<exclude>**/log4j.properties</exclude>
				  </excludes>
				  <archive>
				    <manifest>
					<addClasspath>true</addClasspath>
					<mainClass>com.mkyong.core.utils.App</mainClass>
					<classpathPrefix>dependency-jars/</classpathPrefix>
				    </manifest>
				  </archive>
				</configuration>
			</plugin>
			
			<!-- Copy project dependency -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
				  <execution>
					<id>copy-dependencies</id>
					<phase>package</phase>
					<goals>
						<goal>analyze</goal>
					</goals>
					<configuration>
					  <!-- exclude junit, we need runtime dependency only -->
					  <includeScope>runtime</includeScope>
					  <outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
					</configuration>
				  </execution>
				</executions>
			</plugin>
			<!-- For testing  -->
		    <plugin>
      			<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
      			<version>3.0.0-M7</version>
		    </plugin>
		</plugins>
	</build>  
  <distributionManagement>
    <repository>
        <id>internal</id>
	    <url>file://${basedir}/../Monstrengo/target</url>
    </repository>
  </distributionManagement>  
</project>